name: Promote Cloudflare Build
on:
  workflow_dispatch:
    inputs:
      source_dnslink:
        description: 'Copy value from record ID'
        required: true
        default: '_dnslink.staging'
      dest_dnslink:
        description: 'to record ID'
        required: true
        default: '_dnslink.ipfs-dex'

jobs:
  copy_dnslink:
    runs-on: ubuntu-latest

    steps:
      - name: Get value of given dnslink and set to env.IPFS_HASH
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
        shell: bash
        run: |
          response=$(curl \
            -H "Authorization: Bearer $CLOUDFLARE_TOKEN" \
            -H "Content-Type: application/json" \
            -s "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records?name=${{github.event.inputs.source_dnslink}}.sifchain.finance")

          success=$(jq -r  '.success' <<< "${response}" )

          echo "Response: (echo $response | jq)"
          if [ $success != "true" ]; then
            echo "Pages Update: Failed to read record '${{github.event.inputs.source_dnslink}}'"
            errors=$(jq -r  '.errors' <<< "${response}")
            exit 1
          fi

          # Remove the `dnslink=/ipfs/` from the start.
          IPFS_HASH=$(jq -r  '.result[0].content' <<< "${response}" | sed 's/dnslink=\/ipfs\///')
          echo "$IPFS_HASH"
          echo "RECORD_DOMAIN=sifchain.finance" >> $GITHUB_ENV
          echo "RECORD_NAME=${{github.event.inputs.dest_dnslink}}" >> $GITHUB_ENV
          echo "IPFS_HASH=$IPFS_HASH" >> $GITHUB_ENV
          echo "env: $(cat $GITHUB_ENV)"

      - name: Update cloudflare DNSLink
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_TOKEN_ZONE_ID }}
        id: dnslink
        uses: textileio/cloudflare-update-dnslink@master
        with:
          cid: ${{ env.IPFS_HASH }}

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.14.0
        with:
          payload: "{ \"promoted_from\":\"${{github.event.inputs.source_dnslink}}\",
          \"promoted_to\":\"${{github.event.inputs.dest_dnslink}}\",
          \"record_value\":\"${{env.IPFS_HASH}}\"}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BUILD_PROMOTED_WEBHOOK_URL }}
